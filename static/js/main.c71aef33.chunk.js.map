{"version":3,"sources":["components/Answer.js","components/Task.js","components/CTest.js","constants/tasks.js","components/App.js","serviceWorker.js","index.js"],"names":["Answer","props","handleChange","bind","event","text","target","value","this","onChange","name","TextField","className","type","React","Component","Task","handleAnswerChange","setState","title","answers","state","number","style","marginTop","reactStringReplace","match","i","key","CTest","onSubmit","store","preventDefault","data","JSON","stringify","getState","emailjs","send","process","then","result","alert","submitted","error","console","log","task","dispatch","tasks","map","id","Box","Button","variant","color","onClick","disabled","App","Boolean","window","location","hostname","createStore","action","index","findIndex","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.c71aef33.chunk.js","sourcesContent":["import React from \"react\";\nimport TextField from '@material-ui/core/TextField';\n\nclass Answer extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleChange(event) {\n    const text = event.target.value;\n    this.props.onChange(this.props.name, text);\n  }\n\n  render() {\n    return (\n      <TextField\n        className=\"answer\"\n        name={this.props.name}\n        type=\"text\"\n        onChange={this.handleChange}\n      />\n    );\n  }\n}\n\nexport default Answer;\n","import React from \"react\";\nimport reactStringReplace from \"react-string-replace\";\nimport Answer from \"./Answer\";\n\nclass Task extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  handleAnswerChange = (name, value) => {\n    this.setState( { title: this.props.title, answers: {[name]: value} },  () => this.props.onChange(this.state));\n  }\n  \n  render() {\n    let number = 1;\n    return (\n      <div className=\"task\" style={{marginTop: \"10px\"}}>\n        <h3>{this.props.title}</h3>\n          {reactStringReplace(this.props.text, \"$\", (match, i) => (\n            <Answer \n              key={number} \n              name={`a${number++}`}\n              onChange={this.handleAnswerChange} />\n          ))}\n      </div>\n    );\n  }\n}\n\nexport default Task;\n","import React from \"react\";\nimport \"./CTest.css\";\nimport emailjs from \"emailjs-com\";\nimport Task from \"./Task\";\nimport { Button, Box } from \"@material-ui/core\";\n\nclass CTest extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleChange = this.handleChange.bind(this);\n    this.state = { submitted: \"\" }\n  }\n  \n  handleChange(task) {\n    const { store } = this.props;\n    store.dispatch({\n      type: 'ADD_TASK',\n      task: {\n        title: task.title,\n        answers: task.answers\n      }\n    })\n  }\n\n  onSubmit = (event) => {\n    const { store } = this.props;\n    event.preventDefault();\n    const data = { data: JSON.stringify(store.getState()) };\n    emailjs.send('gmail', 'ctest', data, process.env.REACT_APP_EMAILJS_API_KEY).then((result) => {\n        alert(\"Submitted!\");\n        this.setState({submitted: \"y\"});\n    }, (error) => {\n        console.log(error.text);\n    });\n  };\n\n  render() {\n    const tasks = this.props.tasks.map((task) => (\n      <Task \n        title={task.title} \n        text={task.text} \n        key={task.title}\n        id={task.title}\n        onChange={this.handleChange}/>\n    ));\n\n    return (\n      <div className=\"ui container\" style={{marginTop: \"10px\"}}>\n        <Box>\n        {tasks}\n        <Button \n          variant=\"contained\" \n          color=\"primary\" \n          type=\"submit\" \n          onClick={this.onSubmit} \n          style={{marginTop: \"10px\"}}\n          disabled={this.state.submitted === \"y\"}>\n          Submit\n        </Button>\n        </Box>\n      </div>\n    );\n  }\n}\n\nexport default CTest;\n","export const tasks = [\n  {\n    title: \"Assigned Code\",\n    text: \"$\"\n  },\n  {\n    title: \"17 de agosto, Marbella\",\n    text: `Laura todavía está en la playa y yo estoy ya en la habitación del hotel. \n    No quiero sa$\n    hace mu$ calor y no \n    de$ tomar m$ el s$ .\n    Todas l$ mañanas va$ a l$ playa, \n    a u$ playa peq$ pero m$ bonita ce$ del hotel. \n    Allí no h$ mucha ge$ . \n    Después com$ juntos en u$ bar. \n    Hay muc$ en esa zo$ . \n    ¡Cómo m$ gusta l$ comida de aq$ , \n    sobre to$ el pes$ ! \n    Por las tar$ vamos a$ centro de Marbella. \n    A veces volvemos muy pronto al hotel. Nos gusta mucho escuchar música o leer un buen libro.`\n  },\n  {\n    title: \"Descripcion de mi mama Lauriana\",\n    text: `Mi personaje favorito es mi mamá, su nombre es Lauriana de Jesús Pinta.\n    Tiene cuar$ y ocho añ$ de ed$ y tra$ de prof$ en el cen$ educativo “Fiscal Francia” de ni$ .\n    Ella vi$ en Calvas c$ mi pa$ y mi her$ , a qui$ quiero y apr$ mucho.\n    A mi madre la adm$ porque e$ una per$ luchadora, respe$, solidaria, soci$ , etc.\n    Le gu$ el dep$ , en espe$ el basqu$ .\n    Está siempre ale$ , es m$ amorosa y comuni$ , y trata de darme y enseñarme lo mejor que tiene.\n    Los momentos que he compartido con ella han sido inolvidables. `\n  },\n  {\n    title: \"Así es el día a día de una cantante famosa\",\n    text: `Me levanto a las 8 y desayuno un panecillo con salmón ahumado. Mi hor$ suele\n    s$ frenético, pe$ mi ma$ sabe l$ que hay que ha$ y pu$\n    repasarlo c$ ella. Me gu$ sorprenderme, a$ que nu$ miro mi\n    calen$ la no$ anterior. Me enc$ la sens$ de levan$ por\n    l$ mañana y te$ que mi$ por la ven$ para desc$ en q$\n    ciudad es$ . Como norma$ paso la may$ del tiempo en el hotel, mi madre\n    no se preocupa demasiado. Pocas veces discutimos, porque quiero muchísimo a mi madre.`\n    \n  },\n  {\n    title: \"Perfil de alimentación de los argentinos\",\n    text: `El último censo realizado en la República de Argentina contabiliza a su población en algo\n    más de 40 millones de habitantes. El pa$ produce una cant$ suficiente pa$\n    alimentar a 442 millones de pers$ , sin emb$ , por u$ lado s$\n    observan indiv$ que pres$ déficit de nutri$ en s$ alimentación, y\n    por ot$ lado, tam$ excesos. A los argentinos les so$ comida pero les\n    fa$ variedad. Hay homoge$ en l$ cocina y e$ la me$ de los\n    argentinos. Se cons$ pocos alim$ de bu$ calidad nutri$ , mientras\n    que el exceso de con$ de ot$ agrega grasas de mala calidad, sodio y azúcares.`\n  },\n  {\n    title: \"Un cubano en Kiev, recién llegado y sintiéndose agobiado\",\n    text: `Creo que este correo que les escribí a mis padres fue el más sentimental que he hecho en mi\n    vida. Yo ha$ salido ha$ dos dí$ de Cuba, y el$ no hab$ tenido\n    noti$ mías, no sab$ dónde est$ , ni có$ iba, ni q$ había\n    si$ de m$. Yo me sen$ muy tri$ , pero no po$ decirles\n    e$ . Empecé dici$ que to$ me iba bi$ y que ha$ salido\n    estu$ el vi$ , y s$ querer m$ lágrimas empe$ a salir y no\n    paraban de rodar por mis mejillas mientras escribía. Sabía que los estaba engañando, pero\n    consideraba injusto preocuparlos; total, no resolvería nada.`\n  }\n];\n","import React from \"react\";\nimport CTest from \"./CTest\";\nimport { tasks } from \"../constants/tasks\";\n\nexport default class App extends React.Component {\n  render() {\n    const { store } = this.props;\n    return (\n      <div className=\"ui container\" style={{ marginTop: \"10px\" }}>\n        <CTest store={store} tasks={tasks} />\n      </div>\n    );\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport { createStore } from 'redux';\nimport * as serviceWorker from './serviceWorker';\n\nconst tasksReducer = (state =[], action) => {\n  switch(action.type) {\n    case 'ADD_TASK':\n      let index = state.findIndex(task => task.title === action.task.title);\n      if(index === -1)\n          return [...state, action.task];\n      return state.map(\n        task => task.title === action.task.title ? {title: task.title, answers: {...task.answers, ...action.task.answers} } : task);\n      default:\n        return state;\n\n  }\n}\n\nconst store = createStore(tasksReducer);\n\nReactDOM.render(\n  <React.StrictMode>\n    <App store={store}/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}